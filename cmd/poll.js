const addlib      = require('../addLib.js');

module.exports = {
    run: async (bot,message,args,con)=> {try{

        if(args[0] == "help") {
            return message.channel.send(con.defEmb.setTitle("–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–µ poll").setDescription("–°–æ–∑–¥–∞–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–π").setFooter(con.footer)
            .addField('–ê—Ä–≥—É–º–µ–Ω—Ç—ã:',`**<—Ç–µ–º–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è || "?">** - –°–æ–∑–¥–∞—Å—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ —Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–µ–º–æ–π\n**"<—Ç–µ–º–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è || "?">" "<–≤—ã–±–æ—Ä 1>" "<–≤—ã–±–æ—Ä 2>" ... "<–≤—ã–±–æ—Ä 10>"** - –°–æ–∑–¥–∞—Å—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –º–µ–∂–¥—É –∑–∞–¥–∞–Ω–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏`)
            .addField('–ü—Ä–∏–º–µ—Ä—ã:',`**${con.prefix}poll** - –°–æ–∑–¥–∞—Å—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ —Å —Ç–µ–º–æ–π "?"\n**${con.prefix}poll –ü–æ–π—Ç–∏ –∫—É—à–∞—Ç—å?** -  –°–æ–∑–¥–∞—Å—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ —Å —Ç–µ–º–æ–π "–ü–æ–π—Ç–∏ –∫—É—à–∞—Ç—å?"\n**${con.prefix}poll "–ß—Ç–æ –ø–æ–∫—É—à–∞—Ç—å?" "–Ø–∏—á–Ω–∏—Ü–∞" "–û–º–ª–µ—Ç" "–û–º–ª–µ—Ç —Å —Å–æ—Å–∏—Å–∫–∞–º–∏"** - –°–æ–∑–¥–∞—Å—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ —Å —Ç–µ–º–æ–π "–ß—Ç–æ –ø–æ–∫—É—à–∞—Ç—å?" –∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ "–Ø–∏—á–Ω–∏—Ü–∞", "–û–º–ª–µ—Ç", "–û–º–ª–µ—Ç —Å —Å–æ—Å–∏—Å–∫–∞–º–∏"\n**${con.prefix}poll "" "–î–∞" "–ù–µ—Ç" "–ù–µ –∑–Ω–∞—é"** - –°–æ–∑–¥–∞—Å—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –±–µ–∑ —Ç–µ–º—ã —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ "–î–∞" "–ù–µ—Ç" –∏ "–ù–µ –∑–Ω–∞—é"`)
            .addField('–ú–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:','–í—Å–µ –±–µ–∑ –∏—Å–∫–ª—é—á–µ–Ω–∏–π',true)
            .addField('–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:',`–í–µ—Ä—Å–∏—è 3.4.0`,true)
            )
        }

        let text = args.join(" ");

        if(!text.trim()) return message.channel.send(con.defEmb.setTitle('?')).then(async msg=> {
            await msg.react('‚úÖ');
            msg.react('‚ùé');
        })

        let matchedText = text.match(/"(\\.|[^"\\])*"/g)

        if(!matchedText) {
            if(text.length>=256) return addlib.errors.falseArgs(message,"–¢–µ–º–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–ª–∏–Ω–Ω–µ–µ 256 —Å–∏–º–≤–æ–ª–æ–≤!")
            message.channel.send(con.defEmb.setTitle(text)).then(async msg=> {
                await msg.react('‚úÖ');
                msg.react('‚ùé');
            })
            return;
        }

        let topic    = matchedText[0].slice(1).slice(0,-1);
        let varibles = matchedText.slice(1)

        if(topic && varibles) {

            let endText = ""
            let l = 0
            let i=0
            for(;i<=varibles.length-1;i++) {
                if(varibles[i].slice(1).slice(0,-1).trim() == "") {
                    l++;
                    continue;
                }
                endText+= `${i+1-l}. ${varibles[i].slice(1).slice(0,-1)}\n`
            }
            if((i+1-l)>10) return addlib.errors.falseArgs(message,"–ù–µ –±–æ–ª—å—à–µ 10 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤!");
            if(topic.length>=256) return addlib.errors.falseArgs(message,"–¢–µ–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ –±–æ–ª—å—à–µ 256 —Å–∏–º–≤–æ–ª–æ–≤!");

            if(endText == "") return message.channel.send(con.defEmb.setTitle(text)).then(async msg=> {
                await msg.react('‚úÖ');
                msg.react('‚ùé');
            });
            
            message.channel.send(con.defEmb.setTitle(topic).setDescription(endText)).then(async msg=> {
                for(let i2 = 1;i2<(i+1-l);i2++){
                    await msg.react(["1Ô∏è‚É£", "2Ô∏è‚É£", "3Ô∏è‚É£","4Ô∏è‚É£","5Ô∏è‚É£","6Ô∏è‚É£","7Ô∏è‚É£","8Ô∏è‚É£","9Ô∏è‚É£","üîü"][i2-1]);
                }
            });
        } else if(!topic && varibles) {
            let endText = ""
            let l = 0
            let i=0
            for(;i<=varibles.length-1;i++) {
                if(varibles[i].slice(1).slice(0,-1).trim() == "") {
                    l++;
                    continue;
                }
                endText+= `${i+1-l}. ${varibles[i].slice(1).slice(0,-1)}\n`
            }
            if((i+1-l)>10) return addlib.errors.falseArgs(message,"–ù–µ –±–æ–ª—å—à–µ 10 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤!");

            if(endText == "") return message.channel.send(con.defEmb.setTitle('?')).then(async msg=> {
                await msg.react('‚úÖ');
                msg.react('‚ùé');
            });
            
            message.channel.send(con.defEmb.setDescription(endText)).then(async msg=> {
                for(let i2 = 1;i2<(i+1-l);i2++){
                    await msg.react(["1Ô∏è‚É£", "2Ô∏è‚É£", "3Ô∏è‚É£","4Ô∏è‚É£","5Ô∏è‚É£","6Ô∏è‚É£","7Ô∏è‚É£","8Ô∏è‚É£","9Ô∏è‚É£","üîü"][i2-1]);
                }
            });
        } else if(topic && !varibles) {
            let endText
            if(topic.trim() == "") endText = "?"
            else endText = topic
            return message.channel.send(con.defEmb.setTitle(endText)).then(async msg=> {
                await msg.react('‚úÖ');
                msg.react('‚ùé');
            });
        } else return message.channel.send(con.defEmb.setTitle('?')).then(async msg=> {
            await msg.react('‚úÖ');
            msg.react('‚ùé');
        });

    }catch(err){
        addlib.errors.unknow(message,"–ö–æ–¥ –æ—à–∏–±–∫–∏: " + err);
        bot.channels.cache.get(con.feedBackChannel).send(con.defEmb.setFooter(con.footer)
        .addField('–ö–æ–º–∞–Ω–¥–∞:', `${con.prefix}panda`)
        .addField('ID —Å–µ—Ä–≤–µ—Ä–∞:', message.guild.id, true)
        .addField('ID –∫–∞–Ω–∞–ª–∞:', message.channel.id, true)
        .addField('ID —Å–æ–æ–±—â–µ–Ω–∏—è:', message.id, true)
        .addField('–û—à–∏–±–∫–∞:', ` \`\`\`${err}\`\`\``)
        );
        console.log(err)
    }},
    cmd: "poll",
    desc: "–°–æ–∑–¥–∞–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–π",
	category: "–ü—Ä–æ—á–µ–µ",
	show: true
}